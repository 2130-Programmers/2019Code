// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2130.AlphaHydrae.subsystems;


import org.usfirst.frc2130.AlphaHydrae.Robot;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.networktables.NetworkTable;
import edu.wpi.first.networktables.NetworkTableEntry;
import edu.wpi.first.networktables.NetworkTableInstance;

/**
 *
 */
public class limelightSubsystem extends Subsystem {

    public double limelightX;
    public double limelightY;
    public double limelightArea;
    public boolean pipelineBoolean = false;
    public int i;
    public int currentPipeline;

    private NetworkTable table;
    private NetworkTableEntry tx;
    private NetworkTableEntry ty;
    private NetworkTableEntry ta;
    private NetworkTableEntry pipelineEntry;


    public limelightSubsystem() {
        table = NetworkTableInstance.getDefault().getTable("limelight");
        tx = table.getEntry("tx");
        ty = table.getEntry("ty");
        ta = table.getEntry("ta");
        pipelineEntry = table.getEntry("pipeline");
    }

    @Override
    public void initDefaultCommand() {

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

        limelightX = tx.getDouble(0.0);
        limelightY = ty.getDouble(0.0);
        limelightArea = ta.getDouble(0.0);
    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    // Sets the pipeline, or what camera mode we are in
    public void setPipeline(int pipeline) {
        pipelineEntry.setNumber(pipeline);
        currentPipeline = pipeline;
    }

    public int currentPipelineValue() {
        return currentPipeline;
    }

    public void setPipelineBoolean() {
        if (i == 0 && Robot.oi.switchPipelineButtonValue()) {
            pipelineBoolean = !pipelineBoolean;
            i++;
        } else if (!Robot.oi.switchPipelineButtonValue()){
            i = 0;
        }
        
    }

    public boolean pipelineBooleanValue() {
        return pipelineBoolean;
    }

    public void setPipelineBooleanValue(boolean value) {
        pipelineBoolean = value;
    }
}

